{"version":3,"sources":["components/about.js","components/header.js","components/post/Lpost.js","components/post/SinglePost.js","components/post/post.js","components/home.js","components/login-signup.js","components/Welcome/welcome.js","App.js","index.js"],"names":["About","className","Header","to","Lpost","props","setPost","setIsClicked","userId","title","body","slice","onClick","useState","id","Sid","pd","setPd","post","postID","setPostId","useEffect","loadposts","a","fetch","resp","json","data","Post","isClicked","postData","setPostData","SinglePost","map","Home","Login","isLoggedIn","style","backgroundColor","margin","padding","border","singedInUser","name","email","alt","borderRadius","src","photo","auth","getAuth","signOut","then","catch","error","isSignedIn","setIsLoggedIn","provider","GoogleAuthProvider","signInWithPopup","result","user","setsingedInUser","displayName","photoURL","errorMessage","message","credential","credentialFromError","console","log","Welcome","App","path","element","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.826de17e.chunk.js","sourcesContent":["export default function About() {\r\n  return <div className=\"about\">about</div>;\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul>\r\n        <Link to=\"/\">\r\n          <li>Home</li>\r\n        </Link>\r\n        <Link to=\"/about\">\r\n          <li>About</li>\r\n        </Link>\r\n        <Link to=\"/login\">\r\n          <li>Login</li>\r\n        </Link>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","export default function Lpost(props) {\r\n  const { setPost, setIsClicked, userId, title, body } = props;\r\n  return (\r\n    <div className=\"postLayout\">\r\n      <h1>{`${userId}. ${title}`}</h1>\r\n      <p>{body.slice(0, 85)}...</p>\r\n      <button\r\n        onClick={() => {\r\n          setIsClicked(true);\r\n          setPost(userId);\r\n        }}\r\n      >\r\n        Read More\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function (props) {\r\n  const [pd, setPd] = useState({\r\n    userId: \"\",\r\n    id: \"\",\r\n    Sid: \"\",\r\n    title: \"\",\r\n    body: \"\"\r\n  });\r\n  const [postID, setPostId] = useState(props.post);\r\n\r\n  useEffect(() => {\r\n    const loadposts = async () => {\r\n      const resp = await fetch(\r\n        `https://jsonplaceholder.typicode.com/posts/${postID}`\r\n      );\r\n      const data = await resp.json();\r\n      data[\"Sid\"] = data.id + \". \";\r\n      setPd(data);\r\n    };\r\n    loadposts();\r\n  }, [postID]);\r\n\r\n  return (\r\n    <div className=\"singlePostLayout\">\r\n      <div>\r\n        <h1>{pd.Sid + pd.title}</h1>\r\n\r\n        <p>{pd.body}</p>\r\n        <button\r\n          onClick={() => {\r\n            setPostId(postID - 1);\r\n          }}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setPostId(postID + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n        <div\r\n          onClick={() => {\r\n            props.setIsClicked(false);\r\n          }}\r\n          className=\"goBack\"\r\n        >\r\n          ‚Üê\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Lpost from \"./Lpost\";\r\nimport SinglePost from \"./SinglePost\";\r\n\r\nexport default function Post() {\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  let [postData, setPostData] = useState([]);\r\n  let [post, setPost] = useState(0);\r\n  useEffect(() => {\r\n    const loadposts = async () => {\r\n      const resp = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\r\n      const data = await resp.json();\r\n      setPostData(data);\r\n    };\r\n    loadposts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isClicked ? (\r\n        <SinglePost setIsClicked={setIsClicked} post={post} />\r\n      ) : (\r\n        postData.map((post) => (\r\n          <div>\r\n            <Lpost\r\n              setIsClicked={setIsClicked}\r\n              userId={post.id}\r\n              title={post.title}\r\n              body={post.body}\r\n              setPost={setPost}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import Post from \"./post/post\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div className=\"home\">\r\n      <Post />\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  getAuth,\r\n  signOut,\r\n  signInWithPopup,\r\n  GoogleAuthProvider\r\n} from \"firebase/auth\";\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDnODxmR-518-jNZhGb2ZKQLj6AzTY0vbA\",\r\n  authDomain: \"tasneem-sahat.firebaseapp.com\",\r\n  projectId: \"tasneem-sahat\",\r\n  storageBucket: \"tasneem-sahat.appspot.com\",\r\n  messagingSenderId: \"844136519718\",\r\n  appId: \"1:844136519718:web:5bf90465c949191b65aee7\"\r\n};\r\n\r\ninitializeApp(firebaseConfig);\r\n\r\nexport default function Login(props) {\r\n  // let [props.singedInUser, props.setsingedInUser] = useState({\r\n  //   isSignedIn: false,\r\n  //   name: \"\",\r\n  //   email: \"\",\r\n  //   photo: \"\"\r\n  // });\r\n\r\n  function loginHandle() {\r\n    const provider = new GoogleAuthProvider();\r\n    const auth = getAuth();\r\n    signInWithPopup(auth, provider)\r\n      .then((result) => {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        // The signed-in user info.\r\n        const user = result.user;\r\n        // ...\r\n        props.setsingedInUser({\r\n          isSignedIn: true,\r\n          name: user.displayName,\r\n          email: user.email,\r\n          photo: user.photoURL\r\n        });\r\n        props.setIsLoggedIn(true);\r\n      })\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        const errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        const email = error.email;\r\n        // The AuthCredential type that was used.\r\n        const credential = GoogleAuthProvider.credentialFromError(error);\r\n        // ...\r\n        console.log(errorMessage, email, credential);\r\n      });\r\n  }\r\n  function logoutHandle() {\r\n    const auth = getAuth();\r\n    signOut(auth)\r\n      .then(() => {\r\n        // Sign-out successful.\r\n      })\r\n      .catch((error) => {\r\n        // An error happened.\r\n      });\r\n    props.singedInUser = {\r\n      isSignedIn: false,\r\n      name: \"\",\r\n      email: \"\",\r\n      photo: \"\"\r\n    };\r\n    props.setIsLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      {props.isLoggedIn ? (\r\n        <div>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"lightgray\",\r\n              margin: \"30px 20px\",\r\n              padding: \"20px 10px\",\r\n              border: \"3px solid black\"\r\n            }}\r\n          >\r\n            <h1>Name: {props.singedInUser.name}</h1>\r\n            <h2>Email: {props.singedInUser.email}</h2>\r\n            <img\r\n              alt=\"\"\r\n              style={{ borderRadius: \"50%\" }}\r\n              src={props.singedInUser.photo}\r\n            ></img>\r\n          </div>\r\n\r\n          <button onClick={logoutHandle}>Sign Out</button>\r\n        </div>\r\n      ) : (\r\n        <button onClick={loginHandle}>Sign In</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Welcome() {\r\n  return (\r\n    <div className=\"welcome\">\r\n      <h1>\r\n        To see all the posts first of all you have to login in our site. You can\r\n        log in from\r\n        <br></br>\r\n        <Link to=\"/login\">Here.</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport About from \"./components/about\";\nimport Header from \"./components/header\";\nimport Home from \"./components/home\";\nimport Login from \"./components/login-signup\";\nimport { useState } from \"react\";\nimport Welcome from \"./components/Welcome/welcome\";\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  let [singedInUser, setsingedInUser] = useState({\n    isSignedIn: false,\n    name: \"\",\n    email: \"\",\n    photo: \"\"\n  });\n  return (\n    <Router>\n      <Header />\n      <Routes>\n        {isLoggedIn ? (\n          <Route path=\"/\" element={<Home />} />\n        ) : (\n          <Route path=\"/\" element={<Welcome />} />\n        )}\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/login\"\n          element={\n            <Login\n              setsingedInUser={setsingedInUser}\n              isLoggedIn={isLoggedIn}\n              setIsLoggedIn={setIsLoggedIn}\n              singedInUser={singedInUser}\n            />\n          }\n        />\n      </Routes>\n    </Router>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}